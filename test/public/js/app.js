// Generated by Haxe 4.1.1
(function ($global) { "use strict";
var Test = function() {
	this.initialize();
};
Test.main = function() {
	new Test();
};
Test.prototype = {
	initialize: function() {
		var _gthis = this;
		this.rtcPublisher = new window.red5prosdk.RTCPublisher();
		this.rtcSubscriber = new window.red5prosdk.RTCSubscriber();
		this.config = { protocol : "ws", host : "localhost", port : 5080, app : "live", streamName : "mystream", rtcConfiguration : { iceServers : [{ urls : "stun:stun2.l.google.com:19302"}], iceCandidatePoolSize : 2, bundlePolicy : "max-bundle"}};
		this.rtcPublisher.init(this.config).then(function(data) {
			_gthis.rtcPublisher.on("Publish.Start",$bind(_gthis,_gthis.subscribe));
			return _gthis.rtcPublisher.publish();
		}).then(function(data) {
			console.log("src/Test.hx:46:","Publishing!");
		}).catch(function(err) {
			console.log("src/Test.hx:48:","Could not publish: " + JSON.stringify(err));
		});
	}
	,subscribe: function() {
		var _gthis = this;
		this.rtcSubscriber.init(this.config).then(function(data) {
			return _gthis.rtcSubscriber.subscribe();
		}).then(function(data) {
			console.log("src/Test.hx:57:","Playing!");
		}).catch(function(err) {
			console.log("src/Test.hx:59:","Could not play: " + err);
		});
	}
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var $_;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
Test.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
